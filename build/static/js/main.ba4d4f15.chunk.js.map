{"version":3,"sources":["components/Formulario.js","components/Cita.js","components/Header.js","components/Footer.js","images/catdog.svg","App.js","reportWebVitals.js","index.js"],"names":["Formulario","crearCita","useState","mascota","propietario","fecha","hora","sintomas","cita","actualizarCita","error","actualizarError","actualizarState","e","target","name","value","className","onSubmit","preventDefault","trim","id","uuidv4","type","placeholder","onChange","Cita","eliminarCita","onClick","Header","href","src","alt","Footer","App","citasIniciales","JSON","parse","localStorage","getItem","citas","guardarCitas","useEffect","setItem","stringify","nuevasCitas","filter","titulo","length","style","backgroundImage","catdog","exact","path","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ba4d4f15.chunk.js","sourcesContent":["import React, { Fragment, useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst Formulario = ({ crearCita }) => {\n  //Crear State de Citas\n  const [cita, actualizarCita] = useState({\n    mascota: \"\",\n    propietario: \"\",\n    fecha: \"\",\n    hora: \"\",\n    sintomas: \"\",\n  });\n  //Crear state Error campos ingresados\n  const [error, actualizarError] = useState(false);\n\n  //Funcion que se ejecuta cada vez que el usuario escribe en un input\n  const actualizarState = (e) => {\n    actualizarCita({\n      ...cita, // tomo una copia del arreglo/obejeto original con spread operator y trabajo sobre ese, en React no es valido sobreescribir\n      [e.target.name]: e.target.value, // acceseso al inputo via .name y a el valor ingresado via .value\n    });\n  };\n  // Extraer los valores\n  const { mascota, propietario, fecha, hora, sintomas } = cita;\n  //Cuando el usuario presiona agregar cita\n  const submitCita = (e) => {\n    e.preventDefault();\n\n    //Validar\n    if (\n      mascota.trim() === \"\" ||\n      propietario.trim() === \"\" ||\n      fecha.trim() === \"\" ||\n      hora.trim() === \"\" ||\n      sintomas.trim() === \"\"\n    ) {\n      actualizarError(true);\n      return;\n    }\n    //Eliminar el mensaje de error previo\n    actualizarError(false);\n\n    //Asignar un ID\n    cita.id = uuidv4();\n\n    //Crear la cita\n    crearCita(cita);\n\n    //Reiniciar el form\n    actualizarCita({\n      mascota: \"\",\n      propietario: \"\",\n      fecha: \"\",\n      hora: \"\",\n      sintomas: \"\",\n    });\n  };\n\n  return (\n    <Fragment>\n      <h4>Add an appointment:</h4>\n\n      {error ? <p className=\"alerta-error\">All fields are required</p> : null}\n\n      <form onSubmit={submitCita}>\n        <label>Pet's Name</label>\n        <input\n          type=\"text\"\n          name=\"mascota\"\n          className=\"u-full-width\"\n          placeholder=\"Pet´s Name\"\n          onChange={actualizarState}\n          value={mascota}\n        />\n        <label>Owner's Name</label>\n        <input\n          type=\"text\"\n          name=\"propietario\"\n          className=\"u-full-width\"\n          placeholder=\"Owner's Name\"\n          onChange={actualizarState}\n          value={propietario}\n        />\n        <label>Date</label>\n        <input\n          type=\"date\"\n          name=\"fecha\"\n          className=\"u-full-width\"\n          onChange={actualizarState}\n          value={fecha}\n        />\n        <label>Hour</label>\n        <input\n          type=\"time\"\n          name=\"hora\"\n          className=\"u-full-width\"\n          onChange={actualizarState}\n          value={hora}\n        />\n        <label>Symtoms</label>\n        <textarea\n          className=\"u-full-width\"\n          name=\"sintomas\"\n          onChange={actualizarState}\n          value={sintomas}\n        ></textarea>\n\n        <button type=\"submit\" className=\"button-primary\">\n          Add\n        </button>\n      </form>\n    </Fragment>\n  );\n};\n\nexport default Formulario;\n","import React from \"react\";\n\nconst Cita = ({ cita, eliminarCita }) => (\n  <div className=\"cita\">\n    <p>\n      Pet: <span>{cita.mascota}</span>{\" \"}\n    </p>\n    <p>\n      Owner: <span>{cita.propietario}</span>{\" \"}\n    </p>\n    <p>\n      Date: <span>{cita.fecha}</span>{\" \"}\n    </p>\n    <p>\n      Hour: <span>{cita.hora}</span>{\" \"}\n    </p>\n    <p>\n      Symtoms: <span>{cita.sintomas}</span>{\" \"}\n    </p>\n\n    <button className=\"button eliminar \" onClick={() => eliminarCita(cita.id)}>\n      Delete\n    </button>\n  </div>\n);\n\nexport default Cita;\n","import React, { Fragment } from \"react\";\n\nconst Header = () => {\n  return (\n    <Fragment>\n      <nav id=\"navmenu\">\n        <a href=\"/\" id=\"logo\">\n          <img src=\"/images/logo.svg\" alt=\"Dog&Cat logo\" />\n        </a>\n        <div>\n          <a href=\"/\">\n            <img src=\"/images/home-icon.svg\" alt=\"HOME\" />\n            <span className=\"spans\">FORM</span>\n          </a>\n          <a href=\"/appointments\">\n            <img src=\"/images/search-icon.svg\" alt=\"SEARCH\" />\n            <span className=\"spans\">APPOINTMENTS</span>\n          </a>\n        </div>\n      </nav>\n    </Fragment>\n  );\n};\n\nexport default Header;\n","import React, { Fragment } from \"react\";\n\nconst Footer = () => {\n  return (\n    <Fragment>\n      <div className=\"pushfoot\"></div>\n      <hr></hr>\n      <div className=\"footer\">\n        <p>ALEXIS DE ALMEYDA © 2021</p>\n        <p>\n          <a id=\"mail\" href=\"mailto:alexisdealmeyda@gmail.com\">\n            alexisdealmeyda@gmail.com\n          </a>\n        </p>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Footer;\n","export default __webpack_public_path__ + \"static/media/catdog.d66794ba.svg\";","import React, { Fragment, useState, useEffect } from \"react\";\nimport Formulario from \"./components/Formulario\";\nimport Cita from \"./components/Cita\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport catdog from \"./images/catdog.svg\"\n\n\n\nfunction App() {\n  // Citas en el local storage\n  let citasIniciales = JSON.parse(localStorage.getItem(\"citas\"));\n  if (!citasIniciales) {\n    citasIniciales = [];\n  }\n\n  // Arreglo de citas\n  const [citas, guardarCitas] = useState(citasIniciales);\n\n  //useEffect para realizar ciertas operaciones antes cambios del state\n  useEffect(() => {\n    let citasIniciales = JSON.parse(localStorage.getItem(\"citas\"));\n\n    if (citasIniciales) {\n      localStorage.setItem(\"citas\", JSON.stringify(citas));\n    } else {\n      localStorage.setItem(\"citas\", JSON.stringify([]));\n    }\n  }, [citas]);\n\n  //Funcion que toma las citas actuales y agrega la nueva\n  const crearCita = (cita) => {\n    guardarCitas([...citas, cita]);\n  };\n\n  //Funcion que elimina citas por su id\n  const eliminarCita = (id) => {\n    const nuevasCitas = citas.filter((cita) => cita.id !== id);\n    guardarCitas(nuevasCitas);\n  };\n  //Mensaje condicional\n  const titulo = citas.length === 0 ? \"No Appointments\" : \"Appointments List:\";\n\n  return (\n    <Fragment>\n      <div style={{ backgroundImage: `url(${catdog})` }}>\n      <Router>\n        <Header />\n \n          <div className=\"container\"              \n          >\n            <div className=\"row\">\n              <Route exact path=\"/\">\n                <div className=\"one-half row\">\n                  <Formulario crearCita={crearCita} />\n                </div>\n              </Route>\n              <Route path=\"/appointments\">\n                <div className=\"one-half row\">\n                  <h4>{titulo}</h4>\n                  {citas.map((cita) => (\n                    <Cita\n                      key={cita.id}\n                      cita={cita}\n                      eliminarCita={eliminarCita}\n                    />\n                  ))}\n                </div>\n              </Route>\n            </div>\n          </div>\n\n        <Footer />\n      </Router>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}