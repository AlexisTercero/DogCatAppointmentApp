{"ast":null,"code":"import _toConsumableArray from\"/Users/alexistercero/Desktop/react-udemy/CITAS/appointment-vet-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/alexistercero/Desktop/react-udemy/CITAS/appointment-vet-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Fragment,useState,useEffect}from\"react\";import Formulario from\"./components/Formulario\";import Cita from\"./components/Cita\";import Header from\"./components/Header\";import Footer from\"./components/Footer\";import{BrowserRouter as Router,Route}from\"react-router-dom\";import catdog from\"./images/catdog.svg\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){// Citas en el local storage\nvar citasIniciales=JSON.parse(localStorage.getItem(\"citas\"));if(!citasIniciales){citasIniciales=[];}// Arreglo de citas\nvar _useState=useState(citasIniciales),_useState2=_slicedToArray(_useState,2),citas=_useState2[0],guardarCitas=_useState2[1];//useEffect para realizar ciertas operaciones antes cambios del state\nuseEffect(function(){var citasIniciales=JSON.parse(localStorage.getItem(\"citas\"));if(citasIniciales){localStorage.setItem(\"citas\",JSON.stringify(citas));}else{localStorage.setItem(\"citas\",JSON.stringify([]));}},[citas]);//Funcion que toma las citas actuales y agrega la nueva\nvar crearCita=function crearCita(cita){guardarCitas([].concat(_toConsumableArray(citas),[cita]));};//Funcion que elimina citas por su id\nvar eliminarCita=function eliminarCita(id){var nuevasCitas=citas.filter(function(cita){return cita.id!==id;});guardarCitas(nuevasCitas);};//Mensaje condicional\nvar titulo=citas.length===0?\"No Appointments\":\"Appointments List:\";return/*#__PURE__*/_jsx(Fragment,{children:/*#__PURE__*/_jsx(\"div\",{style:{backgroundImage:\"url(\".concat(catdog,\")\")},children:/*#__PURE__*/_jsxs(Router,{children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/index\",children:/*#__PURE__*/_jsx(\"div\",{className:\"one-half row\",children:/*#__PURE__*/_jsx(Formulario,{crearCita:crearCita})})}),/*#__PURE__*/_jsx(Route,{path:\"/appointments\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"one-half row\",children:[/*#__PURE__*/_jsx(\"h4\",{children:titulo}),citas.map(function(cita){return/*#__PURE__*/_jsx(Cita,{cita:cita,eliminarCita:eliminarCita},cita.id);})]})})]})}),/*#__PURE__*/_jsx(Footer,{})]})})});}export default App;","map":{"version":3,"sources":["/Users/alexistercero/Desktop/react-udemy/CITAS/appointment-vet-app/src/App.js"],"names":["React","Fragment","useState","useEffect","Formulario","Cita","Header","Footer","BrowserRouter","Router","Route","App","citasIniciales","JSON","parse","localStorage","getItem","citas","guardarCitas","setItem","stringify","crearCita","cita","eliminarCita","id","nuevasCitas","filter","titulo","length","backgroundImage","catdog","map"],"mappings":"0XAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,QAA1B,CAAoCC,SAApC,KAAqD,OAArD,CACA,MAAOC,CAAAA,UAAP,KAAuB,yBAAvB,CACA,MAAOC,CAAAA,IAAP,KAAiB,mBAAjB,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CACA,OAASC,aAAa,GAAIC,CAAAA,MAA1B,CAAkCC,KAAlC,KAA+C,kBAA/C,C,gIAKA,QAASC,CAAAA,GAAT,EAAe,CACb;AACA,GAAIC,CAAAA,cAAc,CAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAArB,CACA,GAAI,CAACJ,cAAL,CAAqB,CACnBA,cAAc,CAAG,EAAjB,CACD,CAED;AACA,cAA8BV,QAAQ,CAACU,cAAD,CAAtC,wCAAOK,KAAP,eAAcC,YAAd,eAEA;AACAf,SAAS,CAAC,UAAM,CACd,GAAIS,CAAAA,cAAc,CAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAArB,CAEA,GAAIJ,cAAJ,CAAoB,CAClBG,YAAY,CAACI,OAAb,CAAqB,OAArB,CAA8BN,IAAI,CAACO,SAAL,CAAeH,KAAf,CAA9B,EACD,CAFD,IAEO,CACLF,YAAY,CAACI,OAAb,CAAqB,OAArB,CAA8BN,IAAI,CAACO,SAAL,CAAe,EAAf,CAA9B,EACD,CACF,CARQ,CAQN,CAACH,KAAD,CARM,CAAT,CAUA;AACA,GAAMI,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,IAAD,CAAU,CAC1BJ,YAAY,8BAAKD,KAAL,GAAYK,IAAZ,GAAZ,CACD,CAFD,CAIA;AACA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,EAAD,CAAQ,CAC3B,GAAMC,CAAAA,WAAW,CAAGR,KAAK,CAACS,MAAN,CAAa,SAACJ,IAAD,QAAUA,CAAAA,IAAI,CAACE,EAAL,GAAYA,EAAtB,EAAb,CAApB,CACAN,YAAY,CAACO,WAAD,CAAZ,CACD,CAHD,CAIA;AACA,GAAME,CAAAA,MAAM,CAAGV,KAAK,CAACW,MAAN,GAAiB,CAAjB,CAAqB,iBAArB,CAAyC,oBAAxD,CAEA,mBACE,KAAC,QAAD,wBACE,YAAK,KAAK,CAAE,CAAEC,eAAe,eAASC,MAAT,KAAjB,CAAZ,uBACA,MAAC,MAAD,yBACE,KAAC,MAAD,IADF,cAGI,YAAK,SAAS,CAAC,WAAf,uBAEE,aAAK,SAAS,CAAC,KAAf,wBACE,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,QAAlB,uBACE,YAAK,SAAS,CAAC,cAAf,uBACE,KAAC,UAAD,EAAY,SAAS,CAAET,SAAvB,EADF,EADF,EADF,cAME,KAAC,KAAD,EAAO,IAAI,CAAC,eAAZ,uBACE,aAAK,SAAS,CAAC,cAAf,wBACE,oBAAKM,MAAL,EADF,CAEGV,KAAK,CAACc,GAAN,CAAU,SAACT,IAAD,qBACT,KAAC,IAAD,EAEE,IAAI,CAAEA,IAFR,CAGE,YAAY,CAAEC,YAHhB,EACOD,IAAI,CAACE,EADZ,CADS,EAAV,CAFH,GADF,EANF,GAFF,EAHJ,cA0BE,KAAC,MAAD,IA1BF,GADA,EADF,EADF,CAkCD,CAED,cAAeb,CAAAA,GAAf","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\nimport Formulario from \"./components/Formulario\";\nimport Cita from \"./components/Cita\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport catdog from \"./images/catdog.svg\"\n\n\n\nfunction App() {\n  // Citas en el local storage\n  let citasIniciales = JSON.parse(localStorage.getItem(\"citas\"));\n  if (!citasIniciales) {\n    citasIniciales = [];\n  }\n\n  // Arreglo de citas\n  const [citas, guardarCitas] = useState(citasIniciales);\n\n  //useEffect para realizar ciertas operaciones antes cambios del state\n  useEffect(() => {\n    let citasIniciales = JSON.parse(localStorage.getItem(\"citas\"));\n\n    if (citasIniciales) {\n      localStorage.setItem(\"citas\", JSON.stringify(citas));\n    } else {\n      localStorage.setItem(\"citas\", JSON.stringify([]));\n    }\n  }, [citas]);\n\n  //Funcion que toma las citas actuales y agrega la nueva\n  const crearCita = (cita) => {\n    guardarCitas([...citas, cita]);\n  };\n\n  //Funcion que elimina citas por su id\n  const eliminarCita = (id) => {\n    const nuevasCitas = citas.filter((cita) => cita.id !== id);\n    guardarCitas(nuevasCitas);\n  };\n  //Mensaje condicional\n  const titulo = citas.length === 0 ? \"No Appointments\" : \"Appointments List:\";\n\n  return (\n    <Fragment>\n      <div style={{ backgroundImage: `url(${catdog})` }}>\n      <Router>\n        <Header />\n \n          <div className=\"container\"              \n          >\n            <div className=\"row\">\n              <Route exact path=\"/index\">\n                <div className=\"one-half row\">\n                  <Formulario crearCita={crearCita} />\n                </div>\n              </Route>\n              <Route path=\"/appointments\">\n                <div className=\"one-half row\">\n                  <h4>{titulo}</h4>\n                  {citas.map((cita) => (\n                    <Cita\n                      key={cita.id}\n                      cita={cita}\n                      eliminarCita={eliminarCita}\n                    />\n                  ))}\n                </div>\n              </Route>\n            </div>\n          </div>\n\n        <Footer />\n      </Router>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}