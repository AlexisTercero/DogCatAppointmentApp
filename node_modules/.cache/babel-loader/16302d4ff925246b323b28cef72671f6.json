{"ast":null,"code":"var _jsxFileName = \"/Users/alexistercero/Desktop/react-udemy/CITAS/appointment-vet-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from \"react\";\nimport Formulario from \"./components/Formulario\";\nimport Cita from \"./components/Cita\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport catdog from \"./images/catdog.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  // Citas en el local storage\n  let citasIniciales = JSON.parse(localStorage.getItem(\"citas\"));\n\n  if (!citasIniciales) {\n    citasIniciales = [];\n  } // Arreglo de citas\n\n\n  const [citas, guardarCitas] = useState(citasIniciales); //useEffect para realizar ciertas operaciones antes cambios del state\n\n  useEffect(() => {\n    let citasIniciales = JSON.parse(localStorage.getItem(\"citas\"));\n\n    if (citasIniciales) {\n      localStorage.setItem(\"citas\", JSON.stringify(citas));\n    } else {\n      localStorage.setItem(\"citas\", JSON.stringify([]));\n    }\n  }, [citas]); //Funcion que toma las citas actuales y agrega la nueva\n\n  const crearCita = cita => {\n    guardarCitas([...citas, cita]);\n  }; //Funcion que elimina citas por su id\n\n\n  const eliminarCita = id => {\n    const nuevasCitas = citas.filter(cita => cita.id !== id);\n    guardarCitas(nuevasCitas);\n  }; //Mensaje condicional\n\n\n  const titulo = citas.length === 0 ? \"No Appointments\" : \"Appointments List:\";\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundImage: `url(${catdog})`\n      },\n      children: /*#__PURE__*/_jsxDEV(Router, {\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              exact: true,\n              path: \"/\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"one-half row\",\n                children: /*#__PURE__*/_jsxDEV(Formulario, {\n                  crearCita: crearCita\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/appointments\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"one-half row\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: titulo\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 19\n                }, this), citas.map(cita => /*#__PURE__*/_jsxDEV(Cita, {\n                  cita: cita,\n                  eliminarCita: eliminarCita\n                }, cita.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 21\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"oBdvimZmpf0ogKNJfMjciV0eGOE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/alexistercero/Desktop/react-udemy/CITAS/appointment-vet-app/src/App.js"],"names":["React","Fragment","useState","useEffect","Formulario","Cita","Header","Footer","BrowserRouter","Router","Route","App","citasIniciales","JSON","parse","localStorage","getItem","citas","guardarCitas","setItem","stringify","crearCita","cita","eliminarCita","id","nuevasCitas","filter","titulo","length","backgroundImage","catdog","map"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\nimport Formulario from \"./components/Formulario\";\nimport Cita from \"./components/Cita\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport catdog from \"./images/catdog.svg\"\n\n\n\nfunction App() {\n  // Citas en el local storage\n  let citasIniciales = JSON.parse(localStorage.getItem(\"citas\"));\n  if (!citasIniciales) {\n    citasIniciales = [];\n  }\n\n  // Arreglo de citas\n  const [citas, guardarCitas] = useState(citasIniciales);\n\n  //useEffect para realizar ciertas operaciones antes cambios del state\n  useEffect(() => {\n    let citasIniciales = JSON.parse(localStorage.getItem(\"citas\"));\n\n    if (citasIniciales) {\n      localStorage.setItem(\"citas\", JSON.stringify(citas));\n    } else {\n      localStorage.setItem(\"citas\", JSON.stringify([]));\n    }\n  }, [citas]);\n\n  //Funcion que toma las citas actuales y agrega la nueva\n  const crearCita = (cita) => {\n    guardarCitas([...citas, cita]);\n  };\n\n  //Funcion que elimina citas por su id\n  const eliminarCita = (id) => {\n    const nuevasCitas = citas.filter((cita) => cita.id !== id);\n    guardarCitas(nuevasCitas);\n  };\n  //Mensaje condicional\n  const titulo = citas.length === 0 ? \"No Appointments\" : \"Appointments List:\";\n\n  return (\n    <Fragment>\n      <div style={{ backgroundImage: `url(${catdog})` }}>\n      <Router>\n        <Header />\n \n          <div className=\"container\"              \n          >\n            <div className=\"row\">\n              <Route exact path=\"/\">\n                <div className=\"one-half row\">\n                  <Formulario crearCita={crearCita} />\n                </div>\n              </Route>\n              <Route path=\"/appointments\">\n                <div className=\"one-half row\">\n                  <h4>{titulo}</h4>\n                  {citas.map((cita) => (\n                    <Cita\n                      key={cita.id}\n                      cita={cita}\n                      eliminarCita={eliminarCita}\n                    />\n                  ))}\n                </div>\n              </Route>\n            </div>\n          </div>\n\n        <Footer />\n      </Router>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}