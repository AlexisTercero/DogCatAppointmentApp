{"ast":null,"code":"var _jsxFileName = \"/Users/alexistercero/Desktop/react-udemy/CITAS/appointment-vet-app/src/components/Formulario.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Formulario = ({\n  crearCita\n}) => {\n  _s();\n\n  //Crear State de Citas\n  const [cita, actualizarCita] = useState({\n    mascota: \"\",\n    propietario: \"\",\n    fecha: \"\",\n    hora: \"\",\n    sintomas: \"\"\n  }); //Crear state Error campos ingresados\n\n  const [error, actualizarError] = useState(false); //Funcion que se ejecuta cada vez que el usuario escribe en un input\n\n  const actualizarState = e => {\n    actualizarCita({ ...cita,\n      // tomo una copia del arreglo/obejeto original con spread operator y trabajo sobre ese, en React no es valido sobreescribir\n      [e.target.name]: e.target.value // acceseso al inputo via .name y a el valor ingresado via .value\n\n    });\n  }; // Extraer los valores\n\n\n  const {\n    mascota,\n    propietario,\n    fecha,\n    hora,\n    sintomas\n  } = cita; //Cuando el usuario presiona agregar cita\n\n  const submitCita = e => {\n    e.preventDefault(); //Validar\n\n    if (mascota.trim() === \"\" || propietario.trim() === \"\" || fecha.trim() === \"\" || hora.trim() === \"\" || sintomas.trim() === \"\") {\n      actualizarError(true);\n      return;\n    } //Eliminar el mensaje de error previo\n\n\n    actualizarError(false); //Asignar un ID\n\n    cita.id = uuidv4(); //Crear la cita\n\n    crearCita(cita); //Reiniciar el form\n\n    actualizarCita({\n      mascota: \"\",\n      propietario: \"\",\n      fecha: \"\",\n      hora: \"\",\n      sintomas: \"\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Add an appointment:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"alerta-error\",\n      children: \"All fields are required\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 16\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitCita,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Pet's Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"mascota\",\n        className: \"u-full-width\",\n        placeholder: \"Pet\\xB4s Name\",\n        onChange: actualizarState,\n        value: mascota\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Owner's Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"propietario\",\n        className: \"u-full-width\",\n        placeholder: \"Owner's Name\",\n        onChange: actualizarState,\n        value: propietario\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        name: \"fecha\",\n        className: \"u-full-width\",\n        onChange: actualizarState,\n        value: fecha\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Hour\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"time\",\n        name: \"hora\",\n        className: \"u-full-width\",\n        onChange: actualizarState,\n        value: hora\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Symtoms\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"u-full-width\",\n        name: \"sintomas\",\n        onChange: actualizarState,\n        value: sintomas\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"button-primary\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Formulario, \"5vFVlHtGKVNQPLs8LVc2jRhpSNw=\");\n\n_c = Formulario;\nexport default Formulario;\n\nvar _c;\n\n$RefreshReg$(_c, \"Formulario\");","map":{"version":3,"sources":["/Users/alexistercero/Desktop/react-udemy/CITAS/appointment-vet-app/src/components/Formulario.js"],"names":["React","Fragment","useState","v4","uuidv4","Formulario","crearCita","cita","actualizarCita","mascota","propietario","fecha","hora","sintomas","error","actualizarError","actualizarState","e","target","name","value","submitCita","preventDefault","trim","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAmB;AAAA;;AACpC;AACA,QAAM,CAACC,IAAD,EAAOC,cAAP,IAAyBN,QAAQ,CAAC;AACtCO,IAAAA,OAAO,EAAE,EAD6B;AAEtCC,IAAAA,WAAW,EAAE,EAFyB;AAGtCC,IAAAA,KAAK,EAAE,EAH+B;AAItCC,IAAAA,IAAI,EAAE,EAJgC;AAKtCC,IAAAA,QAAQ,EAAE;AAL4B,GAAD,CAAvC,CAFoC,CASpC;;AACA,QAAM,CAACC,KAAD,EAAQC,eAAR,IAA2Bb,QAAQ,CAAC,KAAD,CAAzC,CAVoC,CAYpC;;AACA,QAAMc,eAAe,GAAIC,CAAD,IAAO;AAC7BT,IAAAA,cAAc,CAAC,EACb,GAAGD,IADU;AACJ;AACT,OAACU,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE,KAFb,CAEoB;;AAFpB,KAAD,CAAd;AAID,GALD,CAboC,CAmBpC;;;AACA,QAAM;AAAEX,IAAAA,OAAF;AAAWC,IAAAA,WAAX;AAAwBC,IAAAA,KAAxB;AAA+BC,IAAAA,IAA/B;AAAqCC,IAAAA;AAArC,MAAkDN,IAAxD,CApBoC,CAqBpC;;AACA,QAAMc,UAAU,GAAIJ,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACK,cAAF,GADwB,CAGxB;;AACA,QACEb,OAAO,CAACc,IAAR,OAAmB,EAAnB,IACAb,WAAW,CAACa,IAAZ,OAAuB,EADvB,IAEAZ,KAAK,CAACY,IAAN,OAAiB,EAFjB,IAGAX,IAAI,CAACW,IAAL,OAAgB,EAHhB,IAIAV,QAAQ,CAACU,IAAT,OAAoB,EALtB,EAME;AACAR,MAAAA,eAAe,CAAC,IAAD,CAAf;AACA;AACD,KAbuB,CAcxB;;;AACAA,IAAAA,eAAe,CAAC,KAAD,CAAf,CAfwB,CAiBxB;;AACAR,IAAAA,IAAI,CAACiB,EAAL,GAAUpB,MAAM,EAAhB,CAlBwB,CAoBxB;;AACAE,IAAAA,SAAS,CAACC,IAAD,CAAT,CArBwB,CAuBxB;;AACAC,IAAAA,cAAc,CAAC;AACbC,MAAAA,OAAO,EAAE,EADI;AAEbC,MAAAA,WAAW,EAAE,EAFA;AAGbC,MAAAA,KAAK,EAAE,EAHM;AAIbC,MAAAA,IAAI,EAAE,EAJO;AAKbC,MAAAA,QAAQ,EAAE;AALG,KAAD,CAAd;AAOD,GA/BD;;AAiCA,sBACE,QAAC,QAAD;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAGGC,KAAK,gBAAG;AAAG,MAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAH,GAA6D,IAHrE,eAKE;AAAM,MAAA,QAAQ,EAAEO,UAAhB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,SAFP;AAGE,QAAA,SAAS,EAAC,cAHZ;AAIE,QAAA,WAAW,EAAC,eAJd;AAKE,QAAA,QAAQ,EAAEL,eALZ;AAME,QAAA,KAAK,EAAEP;AANT;AAAA;AAAA;AAAA;AAAA,cAFF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,eAWE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,aAFP;AAGE,QAAA,SAAS,EAAC,cAHZ;AAIE,QAAA,WAAW,EAAC,cAJd;AAKE,QAAA,QAAQ,EAAEO,eALZ;AAME,QAAA,KAAK,EAAEN;AANT;AAAA;AAAA;AAAA;AAAA,cAXF,eAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBF,eAoBE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,SAAS,EAAC,cAHZ;AAIE,QAAA,QAAQ,EAAEM,eAJZ;AAKE,QAAA,KAAK,EAAEL;AALT;AAAA;AAAA;AAAA;AAAA,cApBF,eA2BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA3BF,eA4BE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,SAAS,EAAC,cAHZ;AAIE,QAAA,QAAQ,EAAEK,eAJZ;AAKE,QAAA,KAAK,EAAEJ;AALT;AAAA;AAAA;AAAA;AAAA,cA5BF,eAmCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnCF,eAoCE;AACE,QAAA,SAAS,EAAC,cADZ;AAEE,QAAA,IAAI,EAAC,UAFP;AAGE,QAAA,QAAQ,EAAEI,eAHZ;AAIE,QAAA,KAAK,EAAEH;AAJT;AAAA;AAAA;AAAA;AAAA,cApCF,eA2CE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,gBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA3CF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuDD,CA9GD;;GAAMR,U;;KAAAA,U;AAgHN,eAAeA,UAAf","sourcesContent":["import React, { Fragment, useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst Formulario = ({ crearCita }) => {\n  //Crear State de Citas\n  const [cita, actualizarCita] = useState({\n    mascota: \"\",\n    propietario: \"\",\n    fecha: \"\",\n    hora: \"\",\n    sintomas: \"\",\n  });\n  //Crear state Error campos ingresados\n  const [error, actualizarError] = useState(false);\n\n  //Funcion que se ejecuta cada vez que el usuario escribe en un input\n  const actualizarState = (e) => {\n    actualizarCita({\n      ...cita, // tomo una copia del arreglo/obejeto original con spread operator y trabajo sobre ese, en React no es valido sobreescribir\n      [e.target.name]: e.target.value, // acceseso al inputo via .name y a el valor ingresado via .value\n    });\n  };\n  // Extraer los valores\n  const { mascota, propietario, fecha, hora, sintomas } = cita;\n  //Cuando el usuario presiona agregar cita\n  const submitCita = (e) => {\n    e.preventDefault();\n\n    //Validar\n    if (\n      mascota.trim() === \"\" ||\n      propietario.trim() === \"\" ||\n      fecha.trim() === \"\" ||\n      hora.trim() === \"\" ||\n      sintomas.trim() === \"\"\n    ) {\n      actualizarError(true);\n      return;\n    }\n    //Eliminar el mensaje de error previo\n    actualizarError(false);\n\n    //Asignar un ID\n    cita.id = uuidv4();\n\n    //Crear la cita\n    crearCita(cita);\n\n    //Reiniciar el form\n    actualizarCita({\n      mascota: \"\",\n      propietario: \"\",\n      fecha: \"\",\n      hora: \"\",\n      sintomas: \"\",\n    });\n  };\n\n  return (\n    <Fragment>\n      <h4>Add an appointment:</h4>\n\n      {error ? <p className=\"alerta-error\">All fields are required</p> : null}\n\n      <form onSubmit={submitCita}>\n        <label>Pet's Name</label>\n        <input\n          type=\"text\"\n          name=\"mascota\"\n          className=\"u-full-width\"\n          placeholder=\"Pet´s Name\"\n          onChange={actualizarState}\n          value={mascota}\n        />\n        <label>Owner's Name</label>\n        <input\n          type=\"text\"\n          name=\"propietario\"\n          className=\"u-full-width\"\n          placeholder=\"Owner's Name\"\n          onChange={actualizarState}\n          value={propietario}\n        />\n        <label>Date</label>\n        <input\n          type=\"date\"\n          name=\"fecha\"\n          className=\"u-full-width\"\n          onChange={actualizarState}\n          value={fecha}\n        />\n        <label>Hour</label>\n        <input\n          type=\"time\"\n          name=\"hora\"\n          className=\"u-full-width\"\n          onChange={actualizarState}\n          value={hora}\n        />\n        <label>Symtoms</label>\n        <textarea\n          className=\"u-full-width\"\n          name=\"sintomas\"\n          onChange={actualizarState}\n          value={sintomas}\n        ></textarea>\n\n        <button type=\"submit\" className=\"button-primary\">\n          Add\n        </button>\n      </form>\n    </Fragment>\n  );\n};\n\nexport default Formulario;\n"]},"metadata":{},"sourceType":"module"}