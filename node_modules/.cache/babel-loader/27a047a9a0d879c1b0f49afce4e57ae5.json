{"ast":null,"code":"var _jsxFileName = \"/Users/alexistercero/Desktop/react-udemy/CITAS/appointment-vet-app/src/components/Formulario.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n;\n\nconst Formulario = ({\n  crearCita\n}) => {\n  _s();\n\n  //Crear State de Citas\n  const [cita, actualizarCita] = useState({\n    mascota: \"\",\n    propietario: \"\",\n    fecha: \"\",\n    hora: \"\",\n    sintomas: \"\"\n  }); //Crear state Error campos ingresados\n\n  const [error, actualizarError] = useState(false); //Funcion que se ejecuta cada vez que el usuario escribe en un input\n\n  const actualizarState = e => {\n    actualizarCita({ ...cita,\n      // tomo una copia del arreglo/obejeto original con spread operator y trabajo sobre ese, en React no es valido sobreescribir\n      [e.target.name]: e.target.value // acceseso al inputo via .name y a el valor ingresado via .value \n\n    });\n  }; // Extraer los valores\n\n\n  const {\n    mascota,\n    propietario,\n    fecha,\n    hora,\n    sintomas\n  } = cita; //Cuando el usuario presiona agregar cita\n\n  const submitCita = e => {\n    e.preventDefault(); //Validar\n\n    if (mascota.trim() === \"\" || propietario.trim() === \"\" || fecha.trim() === \"\" || hora.trim() === \"\" || sintomas.trim() === \"\") {\n      actualizarError(true);\n      return;\n    } //Eliminar el mensaje de error previo\n\n\n    actualizarError(false); //Asignar un ID\n\n    cita.id = uuidv4();\n    console.log(cita); //Crear la cita\n\n    crearCita(cita); //Reiniciar el form\n\n    actualizarCita({\n      mascota: \"\",\n      propietario: \"\",\n      fecha: \"\",\n      hora: \"\",\n      sintomas: \"\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Add an appointment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 12\n    }, this), error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"alerta-error\",\n      children: \"All fields are required\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 22\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitCita,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Nombre Mascota\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"mascota\",\n        className: \"u-full-width\",\n        placeholder: \"Pet Name\",\n        onChange: actualizarState,\n        value: mascota\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Nombre Due\\xF1o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"propietario\",\n        className: \"u-full-width\",\n        placeholder: \"Nombre Due\\xF1o de la mascota\",\n        onChange: actualizarState,\n        value: propietario\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Fecha\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        name: \"fecha\",\n        className: \"u-full-width\",\n        onChange: actualizarState,\n        value: fecha\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Horario\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"time\",\n        name: \"hora\",\n        className: \"u-full-width\",\n        onChange: actualizarState,\n        value: hora\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"S\\xEDntomas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"u-full-width\",\n        name: \"sintomas\",\n        onChange: actualizarState,\n        value: sintomas\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"u-full-width button-primary\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 8\n  }, this);\n};\n\n_s(Formulario, \"1zZXksOFAtu566GluYdGd0tdKfk=\");\n\n_c = Formulario;\nexport default Formulario;\n\nvar _c;\n\n$RefreshReg$(_c, \"Formulario\");","map":{"version":3,"sources":["/Users/alexistercero/Desktop/react-udemy/CITAS/appointment-vet-app/src/components/Formulario.js"],"names":["React","Fragment","useState","v4","uuidv4","Formulario","crearCita","cita","actualizarCita","mascota","propietario","fecha","hora","sintomas","error","actualizarError","actualizarState","e","target","name","value","submitCita","preventDefault","trim","id","console","log"],"mappings":"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","sourcesContent":["import React, { Fragment, useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';;\n\nconst Formulario = ({crearCita}) => {\n\n    //Crear State de Citas\n    const [ cita, actualizarCita] = useState ({\n        mascota: \"\",\n        propietario: \"\",\n        fecha: \"\",\n        hora: \"\",\n        sintomas: \"\"\n    })\n    //Crear state Error campos ingresados\n    const [ error, actualizarError ] = useState(false)\n\n    //Funcion que se ejecuta cada vez que el usuario escribe en un input\n    const actualizarState = e => {\n        actualizarCita({\n            ...cita, // tomo una copia del arreglo/obejeto original con spread operator y trabajo sobre ese, en React no es valido sobreescribir\n            [e.target.name] : e.target.value // acceseso al inputo via .name y a el valor ingresado via .value \n        })\n    }\n    // Extraer los valores\n    const { mascota, propietario, fecha, hora, sintomas } = cita;\n    //Cuando el usuario presiona agregar cita\n     const submitCita =  e => {\n         e.preventDefault();\n\n         //Validar\n         if(mascota.trim() === \"\" || propietario.trim() === \"\" || fecha.trim() === \"\" || hora.trim() === \"\" || sintomas.trim() === \"\"){\n             actualizarError(true);\n             return;\n         }\n         //Eliminar el mensaje de error previo\n         actualizarError(false);\n\n         //Asignar un ID\n         cita.id = uuidv4()\n         console.log(cita);\n\n         //Crear la cita\n         crearCita(cita)\n\n         //Reiniciar el form\n         actualizarCita({\n            mascota: \"\",\n            propietario: \"\",\n            fecha: \"\",\n            hora: \"\",\n            sintomas: \"\"\n         })\n     }\n      \n\n\n\n\n\n    return ( \n       <Fragment>\n           <h4>Add an appointment</h4>\n\n           { error ? <p className = \"alerta-error\">All fields are required</p> : null }\n          \n           <form onSubmit={submitCita} >\n                <label>Nombre Mascota</label>\n                <input\n                    type=\"text\"\n                    name=\"mascota\"\n                    className=\"u-full-width\"\n                    placeholder=\"Pet Name\"\n                    onChange={actualizarState} \n                    value={mascota}               \n                />\n                <label>Nombre Dueño</label>\n                <input\n                    type=\"text\"\n                    name=\"propietario\"\n                    className=\"u-full-width\"\n                    placeholder=\"Nombre Dueño de la mascota\"\n                    onChange={actualizarState} \n                    value={propietario}                  \n                />\n                <label>Fecha</label>\n                <input\n                    type=\"date\"\n                    name=\"fecha\"\n                    className=\"u-full-width\"\n                    onChange={actualizarState} \n                    value={fecha}                  \n                />\n                <label>Horario</label>\n                <input\n                    type=\"time\"\n                    name=\"hora\"\n                    className=\"u-full-width\"\n                    onChange={actualizarState} \n                    value={hora}                \n                />\n                <label>Síntomas</label>\n                <textarea\n                    className=\"u-full-width\"\n                    name=\"sintomas\"\n                    onChange={actualizarState}  \n                    value={sintomas} \n                ></textarea>\n                \n                <button\n                    type=\"submit\"\n                    className=\"u-full-width button-primary\"\n                >Add</button>\n                \n           </form>\n       </Fragment>\n     );\n}\n \nexport default Formulario;"]},"metadata":{},"sourceType":"module"}